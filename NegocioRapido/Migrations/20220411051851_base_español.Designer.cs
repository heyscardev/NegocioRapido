// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NegocioRapido.Model.Data;

#nullable disable

namespace NegocioRapido.Migrations
{
    [DbContext(typeof(BaseDatos))]
    [Migration("20220411051851_base_español")]
    partial class base_español
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NegocioRapido.Model.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Correo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("NumeroIdentficacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("NegocioRapido.Model.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EstadoCompra")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCompra")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRecivido")
                        .HasColumnType("datetime");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("Compras");
                });

            modelBuilder.Entity("NegocioRapido.Model.CompraProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(12,2)");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CompraProductos");
                });

            modelBuilder.Entity("NegocioRapido.Model.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AlertaInventario")
                        .HasColumnType("int");

                    b.Property<bool>("AplicarIva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("CodBarras")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("Inventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("NegocioRapido.Model.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroIdentficacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("NegocioRapido.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<string>("Imagen")
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NumeroIdentficacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasKey("Id");

                    b.HasIndex("NombreUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NegocioRapido.Model.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("EstadoVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<int>("NombreVendedor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("NegocioRapido.Model.VentaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool?>("EstadoBorrado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaBorrado")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasMaxLength(2)
                        .HasColumnType("datetime");

                    b.Property<decimal>("Impuesto")
                        .HasColumnType("decimal(12,2)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("VentaProductos");
                });

            modelBuilder.Entity("ProductoProveedor", b =>
                {
                    b.Property<int>("ProductosId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedoresId")
                        .HasColumnType("int");

                    b.HasKey("ProductosId", "ProveedoresId");

                    b.HasIndex("ProveedoresId");

                    b.ToTable("ProductoProveedor");
                });

            modelBuilder.Entity("NegocioRapido.Model.Compra", b =>
                {
                    b.HasOne("NegocioRapido.Model.Proveedor", "Proveedor")
                        .WithMany("Compras")
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("NegocioRapido.Model.CompraProducto", b =>
                {
                    b.HasOne("NegocioRapido.Model.Compra", "Compra")
                        .WithMany("CompraProducto")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NegocioRapido.Model.Producto", "Producto")
                        .WithMany("ComprasProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Compra");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("NegocioRapido.Model.Venta", b =>
                {
                    b.HasOne("NegocioRapido.Model.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("NegocioRapido.Model.VentaProducto", b =>
                {
                    b.HasOne("NegocioRapido.Model.Producto", "Producto")
                        .WithMany("VentasProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NegocioRapido.Model.Venta", "Venta")
                        .WithMany("VentaProducto")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ProductoProveedor", b =>
                {
                    b.HasOne("NegocioRapido.Model.Producto", null)
                        .WithMany()
                        .HasForeignKey("ProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NegocioRapido.Model.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ProveedoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NegocioRapido.Model.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("NegocioRapido.Model.Compra", b =>
                {
                    b.Navigation("CompraProducto");
                });

            modelBuilder.Entity("NegocioRapido.Model.Producto", b =>
                {
                    b.Navigation("ComprasProductos");

                    b.Navigation("VentasProductos");
                });

            modelBuilder.Entity("NegocioRapido.Model.Proveedor", b =>
                {
                    b.Navigation("Compras");
                });

            modelBuilder.Entity("NegocioRapido.Model.Venta", b =>
                {
                    b.Navigation("VentaProducto");
                });
#pragma warning restore 612, 618
        }
    }
}
